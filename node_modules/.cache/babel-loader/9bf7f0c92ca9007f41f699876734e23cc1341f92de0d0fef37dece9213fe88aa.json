{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danie\\\\Desktop\\\\workers_app\\\\src\\\\context\\\\EmployeeContext.js\",\n  _s = $RefreshSig$();\n// EmployeeContext.js\n\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmployeeContext = /*#__PURE__*/createContext();\nconst EmployeeProvider = ({\n  children\n}) => {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [favorites, setFavorites] = useState([]);\n\n  // Load favorites from localStorage on component mount\n  useEffect(() => {\n    const storedFavorites = JSON.parse(localStorage.getItem('FAVS')) || [];\n    setFavorites(storedFavorites);\n  }, []);\n  const addToFavorites = employee => {\n    if (!favorites.some(fav => fav.email === employee.email)) {\n      const updatedFavorites = [...favorites, employee];\n      setFavorites(updatedFavorites);\n      localStorage.setItem('FAVS', JSON.stringify(updatedFavorites));\n    }\n  };\n  const removeFromFavorites = email => {\n    const updatedFavorites = favorites.filter(emp => emp.email !== email);\n    setFavorites(updatedFavorites);\n    localStorage.setItem('FAVS', JSON.stringify(updatedFavorites));\n  };\n  return /*#__PURE__*/_jsxDEV(EmployeeContext.Provider, {\n    value: {\n      employees,\n      setEmployees,\n      favorites,\n      addToFavorites,\n      removeFromFavorites\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(EmployeeProvider, \"pA+JOg9tt65C1FPD9nUdDTRKFGM=\");\n_c = EmployeeProvider;\nexport { EmployeeContext, EmployeeProvider };\nvar _c;\n$RefreshReg$(_c, \"EmployeeProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","EmployeeContext","EmployeeProvider","children","_s","employees","setEmployees","favorites","setFavorites","storedFavorites","JSON","parse","localStorage","getItem","addToFavorites","employee","some","fav","email","updatedFavorites","setItem","stringify","removeFromFavorites","filter","emp","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/danie/Desktop/workers_app/src/context/EmployeeContext.js"],"sourcesContent":["// EmployeeContext.js\r\n\r\nimport React, { createContext, useState, useEffect } from 'react';\r\n\r\nconst EmployeeContext = createContext();\r\n\r\nconst EmployeeProvider = ({ children }) => {\r\n  const [employees, setEmployees] = useState([]);\r\n  const [favorites, setFavorites] = useState([]);\r\n\r\n  // Load favorites from localStorage on component mount\r\n  useEffect(() => {\r\n    const storedFavorites = JSON.parse(localStorage.getItem('FAVS')) || [];\r\n    setFavorites(storedFavorites);\r\n  }, []);\r\n\r\n  const addToFavorites = (employee) => {\r\n    if (!favorites.some(fav => fav.email === employee.email)) {\r\n      const updatedFavorites = [...favorites, employee];\r\n      setFavorites(updatedFavorites);\r\n      localStorage.setItem('FAVS', JSON.stringify(updatedFavorites));\r\n    }\r\n  };\r\n\r\n  const removeFromFavorites = (email) => {\r\n    const updatedFavorites = favorites.filter(emp => emp.email !== email);\r\n    setFavorites(updatedFavorites);\r\n    localStorage.setItem('FAVS', JSON.stringify(updatedFavorites));\r\n  };\r\n\r\n  return (\r\n    <EmployeeContext.Provider value={{ employees, setEmployees, favorites, addToFavorites, removeFromFavorites }}>\r\n      {children}\r\n    </EmployeeContext.Provider>\r\n  );\r\n};\r\n\r\nexport { EmployeeContext, EmployeeProvider };\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,eAAe,gBAAGL,aAAa,CAAC,CAAC;AAEvC,MAAMM,gBAAgB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;;EAE9C;EACAC,SAAS,CAAC,MAAM;IACd,MAAMW,eAAe,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE;IACtEL,YAAY,CAACC,eAAe,CAAC;EAC/B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,cAAc,GAAIC,QAAQ,IAAK;IACnC,IAAI,CAACR,SAAS,CAACS,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,KAAK,KAAKH,QAAQ,CAACG,KAAK,CAAC,EAAE;MACxD,MAAMC,gBAAgB,GAAG,CAAC,GAAGZ,SAAS,EAAEQ,QAAQ,CAAC;MACjDP,YAAY,CAACW,gBAAgB,CAAC;MAC9BP,YAAY,CAACQ,OAAO,CAAC,MAAM,EAAEV,IAAI,CAACW,SAAS,CAACF,gBAAgB,CAAC,CAAC;IAChE;EACF,CAAC;EAED,MAAMG,mBAAmB,GAAIJ,KAAK,IAAK;IACrC,MAAMC,gBAAgB,GAAGZ,SAAS,CAACgB,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACN,KAAK,KAAKA,KAAK,CAAC;IACrEV,YAAY,CAACW,gBAAgB,CAAC;IAC9BP,YAAY,CAACQ,OAAO,CAAC,MAAM,EAAEV,IAAI,CAACW,SAAS,CAACF,gBAAgB,CAAC,CAAC;EAChE,CAAC;EAED,oBACEnB,OAAA,CAACC,eAAe,CAACwB,QAAQ;IAACC,KAAK,EAAE;MAAErB,SAAS;MAAEC,YAAY;MAAEC,SAAS;MAAEO,cAAc;MAAEQ;IAAoB,CAAE;IAAAnB,QAAA,EAC1GA;EAAQ;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B,CAAC;AAAC1B,EAAA,CA7BIF,gBAAgB;AAAA6B,EAAA,GAAhB7B,gBAAgB;AA+BtB,SAASD,eAAe,EAAEC,gBAAgB;AAAG,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}