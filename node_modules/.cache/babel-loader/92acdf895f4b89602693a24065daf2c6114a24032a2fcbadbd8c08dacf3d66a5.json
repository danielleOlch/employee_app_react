{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danie\\\\Desktop\\\\workers_app\\\\src\\\\components\\\\EmployeeDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { EmployeeContext } from '../context/EmployeeContext';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css'; // Ensure Leaflet CSS is imported\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmployeeDetails = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [employee, setEmployee] = useState(null);\n  const {\n    employees,\n    favorites\n  } = useContext(EmployeeContext);\n  useEffect(() => {\n    const fetchEmployee = async () => {\n      let foundEmployee = favorites.find(emp => emp.login.uuid === id);\n      if (!foundEmployee) {\n        foundEmployee = employees.find(emp => emp.login.uuid === id);\n      }\n      if (foundEmployee) {\n        setEmployee(foundEmployee);\n      } else {\n        try {\n          const response = await fetch(`https://randomuser.me/api/?uuid=${id}`);\n          if (!response.ok) {\n            throw new Error('Failed to fetch employee');\n          }\n          const data = await response.json();\n          setEmployee(data.results[0]);\n        } catch (error) {\n          console.error('Error fetching employee:', error);\n        }\n      }\n    };\n    fetchEmployee();\n  }, [id, employees, favorites]);\n  if (!employee) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n  const fullName = `${employee.name.first} ${employee.name.last}`;\n  const fullAddress = `${employee.location.street.number} ${employee.location.street.name}, ${employee.location.city}, ${employee.location.state}, ${employee.location.country}`;\n  const latitude = parseFloat(employee.location.coordinates.latitude);\n  const longitude = parseFloat(employee.location.coordinates.longitude);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Employee Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Name: \", fullName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Email: \", employee.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Phone: \", employee.phone]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Address: \", fullAddress]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), latitude && longitude && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      children: /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: [latitude, longitude],\n        zoom: 13,\n        style: {\n          height: '400px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Marker, {\n          position: [latitude, longitude],\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: [fullName, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 28\n            }, this), \" \", fullAddress]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(EmployeeDetails, \"LeEJrx2nG++MU6YOh8NIuSe1lpE=\", false, function () {\n  return [useParams];\n});\n_c = EmployeeDetails;\nexport default EmployeeDetails;\nvar _c;\n$RefreshReg$(_c, \"EmployeeDetails\");","map":{"version":3,"names":["React","useContext","useEffect","useState","useParams","EmployeeContext","MapContainer","TileLayer","Marker","Popup","jsxDEV","_jsxDEV","EmployeeDetails","_s","id","employee","setEmployee","employees","favorites","fetchEmployee","foundEmployee","find","emp","login","uuid","response","fetch","ok","Error","data","json","results","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","fullName","name","first","last","fullAddress","location","street","number","city","state","country","latitude","parseFloat","coordinates","longitude","email","phone","className","center","zoom","style","height","url","position","_c","$RefreshReg$"],"sources":["C:/Users/danie/Desktop/workers_app/src/components/EmployeeDetails.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { EmployeeContext } from '../context/EmployeeContext';\r\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css'; // Ensure Leaflet CSS is imported\r\n\r\nconst EmployeeDetails = () => {\r\n  const { id } = useParams();\r\n  const [employee, setEmployee] = useState(null);\r\n  const { employees, favorites } = useContext(EmployeeContext);\r\n\r\n  useEffect(() => {\r\n    const fetchEmployee = async () => {\r\n      let foundEmployee = favorites.find(emp => emp.login.uuid === id);\r\n      if (!foundEmployee) {\r\n        foundEmployee = employees.find(emp => emp.login.uuid === id);\r\n      }\r\n\r\n      if (foundEmployee) {\r\n        setEmployee(foundEmployee);\r\n      } else {\r\n        try {\r\n          const response = await fetch(`https://randomuser.me/api/?uuid=${id}`);\r\n          if (!response.ok) {\r\n            throw new Error('Failed to fetch employee');\r\n          }\r\n          const data = await response.json();\r\n          setEmployee(data.results[0]);\r\n        } catch (error) {\r\n          console.error('Error fetching employee:', error);\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchEmployee();\r\n  }, [id, employees, favorites]);\r\n\r\n  if (!employee) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  const fullName = `${employee.name.first} ${employee.name.last}`;\r\n  const fullAddress = `${employee.location.street.number} ${employee.location.street.name}, ${employee.location.city}, ${employee.location.state}, ${employee.location.country}`;\r\n  const latitude = parseFloat(employee.location.coordinates.latitude);\r\n  const longitude = parseFloat(employee.location.coordinates.longitude);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Employee Details</h2>\r\n      <p>Name: {fullName}</p>\r\n      <p>Email: {employee.email}</p>\r\n      <p>Phone: {employee.phone}</p>\r\n      <p>Address: {fullAddress}</p>\r\n      {latitude && longitude && (\r\n        <div className=\"map-container\">\r\n          <MapContainer center={[latitude, longitude]} zoom={13} style={{ height: '400px' }}>\r\n            <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n            <Marker position={[latitude, longitude]}>\r\n              <Popup>\r\n                {fullName} <br /> {fullAddress}\r\n              </Popup>\r\n            </Marker>\r\n          </MapContainer>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmployeeDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}