{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danie\\\\Desktop\\\\workers_app\\\\src\\\\components\\\\EmployeeDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmployeeDetails = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Assuming id is UUID from employee data\n\n  const [employee, setEmployee] = useState(null);\n  useEffect(() => {\n    const fetchEmployeeDetails = async () => {\n      try {\n        const response = await fetch(`https://randomuser.me/api/?results=1&seed=${id}`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch employee details');\n        }\n        const data = await response.json();\n        setEmployee(data.results[0]);\n      } catch (error) {\n        console.error('Error fetching employee details:', error);\n      }\n    };\n    fetchEmployeeDetails();\n  }, [id]);\n  if (!employee) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  }\n  const {\n    name,\n    email,\n    phone,\n    location\n  } = employee;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"employee-details\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [name.first, \" \", name.last]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Email: \", email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Phone: \", phone]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Address: \", location.street.number, \" \", location.street.name, \", \", location.city]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(EmployeeDetails, \"GaM9DbjJsv3wIbuKJqbkA0ayDec=\", false, function () {\n  return [useParams];\n});\n_c = EmployeeDetails;\nexport default EmployeeDetails;\nvar _c;\n$RefreshReg$(_c, \"EmployeeDetails\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","EmployeeDetails","_s","id","employee","setEmployee","fetchEmployeeDetails","response","fetch","ok","Error","data","json","results","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","name","email","phone","location","className","first","last","street","number","city","_c","$RefreshReg$"],"sources":["C:/Users/danie/Desktop/workers_app/src/components/EmployeeDetails.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst EmployeeDetails = () => {\r\n  const { id } = useParams(); // Assuming id is UUID from employee data\r\n\r\n  const [employee, setEmployee] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchEmployeeDetails = async () => {\r\n      try {\r\n        const response = await fetch(`https://randomuser.me/api/?results=1&seed=${id}`);\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch employee details');\r\n        }\r\n        const data = await response.json();\r\n        setEmployee(data.results[0]);\r\n      } catch (error) {\r\n        console.error('Error fetching employee details:', error);\r\n      }\r\n    };\r\n\r\n    fetchEmployeeDetails();\r\n  }, [id]);\r\n\r\n  if (!employee) {\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n  const { name, email, phone, location } = employee;\r\n\r\n  return (\r\n    <div className=\"employee-details\">\r\n      <h2>{name.first} {name.last}</h2>\r\n      <p>Email: {email}</p>\r\n      <p>Phone: {phone}</p>\r\n      <p>Address: {location.street.number} {location.street.name}, {location.city}</p>\r\n      {/* You can add Leaflet map integration here */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmployeeDetails;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM;IAAEC;EAAG,CAAC,GAAGL,SAAS,CAAC,CAAC,CAAC,CAAC;;EAE5B,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd,MAAMU,oBAAoB,GAAG,MAAAA,CAAA,KAAY;MACvC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6CAA6CL,EAAE,EAAE,CAAC;QAC/E,IAAI,CAACI,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,kCAAkC,CAAC;QACrD;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCP,WAAW,CAACM,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,CAAC;MAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MAC1D;IACF,CAAC;IAEDR,oBAAoB,CAAC,CAAC;EACxB,CAAC,EAAE,CAACH,EAAE,CAAC,CAAC;EAER,IAAI,CAACC,QAAQ,EAAE;IACb,oBAAOJ,OAAA;MAAAgB,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC1B;EAEA,MAAM;IAAEC,IAAI;IAAEC,KAAK;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAGpB,QAAQ;EAEjD,oBACEJ,OAAA;IAAKyB,SAAS,EAAC,kBAAkB;IAAAT,QAAA,gBAC/BhB,OAAA;MAAAgB,QAAA,GAAKK,IAAI,CAACK,KAAK,EAAC,GAAC,EAACL,IAAI,CAACM,IAAI;IAAA;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACjCpB,OAAA;MAAAgB,QAAA,GAAG,SAAO,EAACM,KAAK;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBpB,OAAA;MAAAgB,QAAA,GAAG,SAAO,EAACO,KAAK;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBpB,OAAA;MAAAgB,QAAA,GAAG,WAAS,EAACQ,QAAQ,CAACI,MAAM,CAACC,MAAM,EAAC,GAAC,EAACL,QAAQ,CAACI,MAAM,CAACP,IAAI,EAAC,IAAE,EAACG,QAAQ,CAACM,IAAI;IAAA;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE7E,CAAC;AAEV,CAAC;AAAClB,EAAA,CArCID,eAAe;EAAA,QACJH,SAAS;AAAA;AAAAiC,EAAA,GADpB9B,eAAe;AAuCrB,eAAeA,eAAe;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}